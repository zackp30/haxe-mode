#+TITLE:     Support for Haxe in Org-Babel, Emacs
#+AUTHOR:    Oleg Sivokon
#+EMAIL:     olegsivokon@gmail.com
#+DATE:      2013-09-06 Fri
#+DESCRIPTION: Presentation for talk on Haxe support in Org-Babel
#+KEYWORDS: Haxe Emacs Org-mode Org-Babel
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT:
#+STARTUP: beamer
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [bigger]
#+LATEX_HEADER: \usepackage[russian]{babel}
#+BEAMER_FRAME_LEVEL: 2
#+COLUMNS: %40ITEM %10BEAMER_env(Env) %9BEAMER_envargs(Env Args) %4BEAMER_col(Col) %10BEAMER_extra(Extra)

* Краткое описание Орг режима в Эмаксе 

** Аудитория                                                        :B_verse:
   :PROPERTIES:
   :BEAMER_env: verse
   :END:
   Этот раздел предназначен для начинающих пользователей, или тех, кто
   никогда не пользовался Эмаксом, или Оргом.

** Сфера применения Орга
   Орг - это режим редактирования в Эмаксе выполняющий следующие
   задачи:
   - Составление расписаний.
   - Ведение журналов исследований, или наблюдений.
   - Инструмент для подготовки технической документации.
   - Управление личными финансами с использованием электронных таблиц.

** История
   Орг был создан проф. факультета астрономии Амстердамского
   университета Домиником Карстеном в 2003 году. С тех пор, с
   небольшим перерывом, им же и поддерживается. На сегодняшний день
   Орг является одним из самых активно развивающихся проектов входящих
   в состав ГНУ Эмакса. Начиная с 22-й версии, Орг входит в
   официальную сборку Эмакса.

** Примеры
   Эта презентация была создана с использованием все того же Орга, а
   так же [[http://en.wikipedia.org/wiki/Beamer_(LaTeX)][LaTeX пакета Beamer]].

   Ссылки на исходники будут в конце презентации.

* Роль Орг-Вавилона

** Обзор                                                            :B_verse:
   :PROPERTIES:
   :BEAMER_env: verse
   :END:
   Орг-Вавилон - это расширение Орга предназначеное для работы с
   исходным кодом. Основые его задачи:
   - Выполнение (с последующей вставкой в исходный документ).
   - Подсветка синтаксиса.
   - Поддержка Literate Programming (компоновка блоков кода: /tangling/).
  
** Создание технической документации
   Пожалуй самым типичным использованием Орг-Вавилона, по крайней
   мере для меня, является написание всевозможной сопроводительной
   документации. Отдельная интересная возможность: создание диаграм.
   
** Исследовательская работа
   Орг-Вавилон очень часто используется в исследовательских областях
   смежных с программированием. Это может быть физика, биология, и
   даже лингвистика - везде, где вам может понадобиться обработать
   данные с помощью компьютера, создать графы, диаграммы, таблицы
   иллюстрирующие исследование.

   Интересная особенность заключается еще и в том, что Орг файлы
   представляют собой исходный код. Это позволит вашим коллегам
   проверить результаты ваших вычислений автономно, не полагаясь на
   ваши распечатки.

** Научные публикации
   Орг-Вавилон много раз использовался для верстки научных работ.
   Благодаря взаимодействию с LaTeX из файлов Орг можно получить
   файлы приемлимые по качеству для книжного издательства.

   С помощью Орга-Вавилона было написано много учебников и пособий.
   Например, книга Бенжамина С. Пирса о теории типов.

* Поддержка Хекса

** Что уже сделано
   Пока что я написал только экспорт в ЯваСкрипт и частично
   поддержку обработки таблиц. Для того, чтобы это заработало, кроме
   Хекса вам нужно будет установить Node.js.

** Запланировано
   - Поддержка других языков, в которые Хекс компилируется.
   - Полноценные таблицы.
   - Вставка промежуточного кода в документ (а не результатов).
   - При экспорте в HTML, вставка SWF.

** Пример
   #+NAME: haxe-example
   #+BEGIN_SRC haxe
     package ;
     class OrgBabelTest {
       
       static function main() {
         trace("OrgBabelTest::main вызвана!");
       }
       
     }
   #+END_SRC

** И... результат!
   #+CALL: haxe-example()

   #+RESULTS: haxe-example()
   : OrgBabelTest::main called

